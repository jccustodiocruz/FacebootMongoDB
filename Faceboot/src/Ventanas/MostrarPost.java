/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import DAO.PostDAOImp;
import DAO.UsuarioDAOImp;
import Entidades.Comentario;
import Entidades.Post;
import Entidades.Usuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author juanc
 */
public class MostrarPost extends javax.swing.JFrame {

    static Usuario usuario;
    static UsuarioDAOImp usuarioImp;
    static PostDAOImp postImp;
    static Post post;

    /**
     * Creates new form MostrarPost
     */
    public MostrarPost(PostDAOImp postImp, Usuario usuario, UsuarioDAOImp usuarioImp, Post post) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.postImp = postImp;
        this.usuario = usuario;
        this.usuarioImp = usuarioImp;
        this.post = post;
        bEliminar.setVisible(false);
        llenarInfo();
        modeloTabla();
        llenarTabla();
    }

    public void llenarTabla() {
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        if (post.getComentarios() != null) {
            List<Comentario> lc = post.getComentarios();
            Object o[] = null;
            SimpleDateFormat sdf = new SimpleDateFormat("E dd/MM/yyyy HH:mm");

            for (int i = 0; i < lc.size(); i++) {
                modelo.addRow(o);
                modelo.setValueAt(lc.get(i).getUsuario(), i, 0);
                modelo.setValueAt(sdf.format(lc.get(i).getFecha()), i, 1);
                modelo.setValueAt(lc.get(i).getContenido(), i, 2);
            }

            for (int i = 0; i < tComentarios.getColumnCount(); i++) {
                tComentarios.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        }
    }

    DefaultTableModel modelo;
    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();

    private void modeloTabla() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "Username", "Fecha",
                        "Contenido"}) {
                        Class[] types = new Class[]{
                            java.lang.String.class,
                            java.lang.String.class,
                            java.lang.String.class,};
                        boolean[] canEdit = new boolean[]{
                            false, false, false
                        };

                        @Override
                        public Class getColumnClass(int columnIndex) {
                            return types[columnIndex];
                        }

                        @Override
                        public boolean isCellEditable(int rowIndex, int colIndex) {
                            return canEdit[colIndex];
                        }
                    });
            tComentarios.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString() + "error2");
        }
    }

    public void llenarInfo() {
        areaUsername.setEditable(false);
        areaFecha.setEditable(false);
        areaContenido.setEditable(false);
        areaTags.setEditable(false);
        SimpleDateFormat sdf = new SimpleDateFormat("E dd/MM/yyyy HH:mm");
        List<String> tags = post.getTags();

        areaUsername.setText(post.getUsuario());
        areaFecha.setText(sdf.format(post.getFecha()));
        areaContenido.setText(post.getContenido());

        for (int i = 0; i < tags.size(); i++) {
            areaTags.append(tags.get(i) + ",");
        }

        if (usuario.getUsername().equals(areaUsername.getText())) {
            bEliminar.setVisible(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaContenido = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        areaComentario = new javax.swing.JTextField();
        areaUsername = new javax.swing.JTextField();
        areaFecha = new javax.swing.JTextField();
        Comentar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaTags = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tComentarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 550));
        setSize(new java.awt.Dimension(850, 550));
        getContentPane().setLayout(null);

        jLabel1.setText("Username");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 30, 70, 16);

        jLabel2.setText("Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 70, 41, 16);

        areaContenido.setColumns(20);
        areaContenido.setRows(5);
        jScrollPane1.setViewportView(areaContenido);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 110, 750, 100);

        jLabel3.setText("Tags");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 230, 28, 16);
        getContentPane().add(areaComentario);
        areaComentario.setBounds(40, 420, 630, 30);
        getContentPane().add(areaUsername);
        areaUsername.setBounds(100, 20, 690, 30);
        getContentPane().add(areaFecha);
        areaFecha.setBounds(100, 70, 690, 30);

        Comentar.setText("Comentar");
        Comentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComentarActionPerformed(evt);
            }
        });
        getContentPane().add(Comentar);
        Comentar.setBounds(689, 420, 100, 25);

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(bEliminar);
        bEliminar.setBounds(420, 460, 79, 25);

        areaTags.setColumns(20);
        areaTags.setRows(5);
        jScrollPane2.setViewportView(areaTags);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(90, 220, 700, 40);

        tComentarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tComentarios);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(42, 272, 750, 130);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        postImp.delete(post);
        this.dispose();

        UsuarioLogin ul = new UsuarioLogin(usuarioImp, usuario, postImp);
        ul.setVisible(true);
    }//GEN-LAST:event_bEliminarActionPerformed

    private void ComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComentarActionPerformed
        
        List<Comentario> comentarios;
        if(post.getComentarios()== null){
            comentarios = new ArrayList<>();
        }else{
            comentarios = post.getComentarios();
        }
        
        Date fecha = new Date();

        Comentario comentario = new Comentario();
        comentario.setUsuario(usuario.getUsername());
        comentario.setFecha(fecha);
        comentario.setContenido(areaComentario.getText());
        comentarios.add(comentario);
        
        for (int i = 0; i < comentarios.size(); i++) {
            System.out.println(comentarios.get(i).getContenido());
            System.out.println(comentarios.get(i).getUsuario());
            System.out.println(comentarios.get(i).getFecha());
        }


        postImp.agregarComentario(post, comentarios);
        System.out.println("Esto es una prueba");
        this.dispose();      
        MostrarPost mp = new MostrarPost(postImp, usuario, usuarioImp, post);
        mp.setVisible(true);
    }//GEN-LAST:event_ComentarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarPost(postImp, usuario, usuarioImp, post).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comentar;
    private javax.swing.JTextField areaComentario;
    private javax.swing.JTextArea areaContenido;
    private javax.swing.JTextField areaFecha;
    private javax.swing.JTextArea areaTags;
    private javax.swing.JTextField areaUsername;
    private javax.swing.JButton bEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tComentarios;
    // End of variables declaration//GEN-END:variables
}
