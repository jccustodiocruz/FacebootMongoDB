/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import DAO.PostDAOImp;
import DAO.UsuarioDAOImp;
import Entidades.Post;
import Entidades.Usuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juanc
 */
public class UsuarioLogin extends javax.swing.JFrame {

    static UsuarioDAOImp usuarioImp;
    static PostDAOImp postImp;
    static Usuario usuario;

    /**
     * Creates new form UsuarioLogin
     */
    public UsuarioLogin(UsuarioDAOImp usuarioImp, Usuario usuario, PostDAOImp postImp) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.usuarioImp = usuarioImp;
        this.usuario = usuario;
        this.postImp = postImp;
        lUsername.setText(usuario.getUsername());
        modeloTabla();
        List<Post> lp = postImp.findAll();
        llenarTabla(lp);
        labelError.setVisible(false);
    }
    
    public void llenarTabla(List<Post> lp) {
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);        
        Object o[] = null;
        SimpleDateFormat sdf = new SimpleDateFormat("E dd/MM/yyyy HH:mm");

        for (int i = 0; i < lp.size(); i++) {
            String tags = "";
            List<String> t = lp.get(i).getTags();
            for (int j = 0; j < t.size(); j++) {
                tags = tags.concat(t.get(j)+", ");
            }
            modelo.addRow(o);
            modelo.setValueAt(lp.get(i).getUsuario(), i, 0);
            modelo.setValueAt(sdf.format(lp.get(i).getFecha()), i, 1);            
            modelo.setValueAt(lp.get(i).getContenido(), i, 2);
            modelo.setValueAt(tags, i, 3);             
        }
        
        for (int i = 0; i < tPosts.getColumnCount(); i++) {
            tPosts.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    DefaultTableModel modelo;
    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();

    private void modeloTabla() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "Username", "Fecha",
                        "Contenido", "Tags"}) {
                        Class[] types = new Class[]{                            
                            java.lang.String.class,
                            java.lang.String.class,                            
                            java.lang.String.class,
                            java.lang.String.class
                        };
                        boolean[] canEdit = new boolean[]{
                            false, false, false, false
                        };

                        @Override
                        public Class getColumnClass(int columnIndex) {
                            return types[columnIndex];
                        }

                        @Override
                        public boolean isCellEditable(int rowIndex, int colIndex) {
                            return canEdit[colIndex];
                        }
                    });
            tPosts.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString() + "error2");
        }                        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lUsername = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPosts = new javax.swing.JTable();
        bRealizarPost = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bLogout = new javax.swing.JButton();
        areaTag = new javax.swing.JTextField();
        bBuscar = new javax.swing.JButton();
        labelError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 550));
        setSize(new java.awt.Dimension(850, 550));
        getContentPane().setLayout(null);

        lUsername.setFont(new java.awt.Font("Consolas", 0, 48)); // NOI18N
        lUsername.setText("Username");
        getContentPane().add(lUsername);
        lUsername.setBounds(30, 10, 220, 70);

        tPosts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tPosts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPostsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tPosts);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 80, 790, 370);

        bRealizarPost.setText("Realizar Post");
        bRealizarPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRealizarPostActionPerformed(evt);
            }
        });
        getContentPane().add(bRealizarPost);
        bRealizarPost.setBounds(50, 460, 110, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Posts");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(400, 50, 80, 29);

        bLogout.setText("Logout");
        bLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLogoutActionPerformed(evt);
            }
        });
        getContentPane().add(bLogout);
        bLogout.setBounds(720, 20, 71, 25);

        areaTag.setText("Buscar por tag");
        getContentPane().add(areaTag);
        areaTag.setBounds(390, 450, 290, 40);

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(bBuscar);
        bBuscar.setBounds(700, 460, 71, 25);

        labelError.setForeground(new java.awt.Color(255, 51, 51));
        labelError.setText("No hay post con ese tag");
        getContentPane().add(labelError);
        labelError.setBounds(230, 460, 160, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRealizarPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRealizarPostActionPerformed
        HacerPost hp = new HacerPost(postImp, usuario, usuarioImp);
        hp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bRealizarPostActionPerformed

    private void bLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLogoutActionPerformed
        this.dispose();
        Inicio i = new Inicio();
        i.setVisible(true);
    }//GEN-LAST:event_bLogoutActionPerformed

    private void tPostsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPostsMouseClicked
        int row = tPosts.getSelectedRow();
        String contenido = (String) tPosts.getValueAt(row, 2);
        
        Post post = postImp.findByContenido(contenido);
        
        MostrarPost mp = new MostrarPost(postImp, usuario, usuarioImp, post);
        mp.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_tPostsMouseClicked

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        String tag = areaTag.getText();
        
        List<Post> posts = new ArrayList<>();
        
        if(postImp.findByTag(tag) != null){
            posts = postImp.findByTag(tag);
            llenarTabla(posts);
            labelError.setVisible(false);
        }
        else{
            labelError.setVisible(true);
        }
    }//GEN-LAST:event_bBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuarioLogin(usuarioImp, usuario, postImp).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField areaTag;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bLogout;
    private javax.swing.JButton bRealizarPost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lUsername;
    private javax.swing.JLabel labelError;
    private javax.swing.JTable tPosts;
    // End of variables declaration//GEN-END:variables
}
